explain:
Root: it does not have a parent node which is NULL
Inner: it is the parent node of some nodes, and it has a not NULL parent.
Leaf: rest of the cases other than above two

#solution 1
SELECT
	t.id,
	CASE
		WHEN t.p_id IS NULL THEN 'Root'
		WHEN t.id IN (
		SELECT
			atree.p_id
		FROM
			Tree atree) THEN 'Inner'
		ELSE 'Leaf'
	END
AS TYPE
FROM
	Tree t


#solution 2
(
SELECT
	id,
	'Root' AS TYPE
FROM
	Tree t
WHERE
	p_id IS NULL)
UNION
(
SELECT
DISTINCT t1.p_id AS id,
'Inner' AS TYPE
FROM
Tree t1
JOIN Tree t2
ON
t1.p_id = t2.id
WHERE
t2.id IS NOT NULL
AND t2.p_id IS NOT NULL)
UNION
(
SELECT
DISTINCT t2.id,
'Leaf' AS TYPE
FROM
Tree t1
RIGHT JOIN Tree t2
ON
t1.p_id = t2.id
WHERE
t1.p_id IS NULL
AND t2.p_id IS NOT NULL)